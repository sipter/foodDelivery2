{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/DCI HTML-CSS EXERCISES/food_delivery2/frontend/src/components/SignIn.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themeSignIn = createTheme({\n  palette: {\n    primary: {\n      main: \"#4d8993\"\n    },\n    secondary: {\n      main: \"#d9cebf\"\n    }\n  }\n});\n\nfunction Copyright(props) {\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    color: \"text.secondary\",\n    align: \"center\",\n    ...props,\n    children: [\"Copyright Â© \", /*#__PURE__*/_jsxDEV(Link, {\n      color: \"inherit\",\n      href: \"https://mui.com/\",\n      children: \"Your Website\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), \" \", new Date().getFullYear(), \".\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n} //const theme = createTheme();\n\n\n_c = Copyright;\nexport default function SignIn(_ref) {\n  _s();\n\n  let {\n    isLoggedIn,\n    curre\n  } = _ref;\n  let navigate = useNavigate();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n\n  const updateData = event => {\n    switch (event.target.name) {\n      case \"username\":\n        setEmail(event.target.value);\n        break;\n\n      case \"password\":\n        setPassword(event.target.value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const attemptLogin = async event => {\n    event.preventDefault();\n    const loginData = {\n      email: email,\n      password: password\n    };\n    const settings = {\n      method: \"POST\",\n      body: JSON.stringify(loginData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/login\", settings);\n    const parsedRes = await response.json();\n\n    try {\n      // If the request was successful\n      if (response.ok) {//props.setCurrentUserId(parsedRes.id);\n        //props.setIsLoggedIn(true);\n        // If the request was unsuccessful\n      } else {\n        throw new Error(parsedRes.message);\n      }\n    } catch (err) {\n      alert(err.message);\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  };\n\n  if (!isLoggedIn) {\n    // Display the login view\n    if (showLogin) {\n      return /*#__PURE__*/_jsxDEV(Login, {\n        setShowLogin: setShowLogin,\n        setIsLoggedIn: setIsLoggedIn,\n        setCurrentUserId: setCurrentUserId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this); // Display the register view\n    } else {\n      return /*#__PURE__*/_jsxDEV(Register, {\n        setShowLogin: setShowLogin,\n        setIsLoggedIn: setIsLoggedIn,\n        setCurrentUserId: setCurrentUserId,\n        setToken: setToken\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: themeSignIn,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      component: \"main\",\n      maxWidth: \"xs\",\n      children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginTop: 8,\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          sx: {\n            m: 1,\n            bgcolor: \"secondary.main\"\n          },\n          children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h1\",\n          variant: \"h5\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          onSubmit: attemptLogin,\n          noValidate: true,\n          sx: {\n            mt: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            id: \"email\",\n            label: \"Email Address\",\n            name: \"email\",\n            autoComplete: \"email\",\n            autoFocus: true,\n            onChange: updateData,\n            value: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            margin: \"normal\",\n            required: true,\n            fullWidth: true,\n            name: \"password\",\n            label: \"Password\",\n            type: \"password\",\n            id: \"password\",\n            autoComplete: \"current-password\",\n            onChange: updateData,\n            value: password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: \"remember\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 24\n            }, this),\n            label: \"Remember me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            fullWidth: true,\n            variant: \"contained\",\n            sx: {\n              mt: 3,\n              mb: 2\n            },\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"#\",\n                variant: \"body2\",\n                children: \"Forgot password?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                onClick: () => navigate(`/sign-up`),\n                variant: \"body2\",\n                style: {\n                  cursor: \"pointer\"\n                },\n                children: \"Don't have an account? Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Copyright, {\n        sx: {\n          mt: 8,\n          mb: 4\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SignIn, \"H+iueE6ppXbrBS3eFHdSUQUe0Ps=\", false, function () {\n  return [useNavigate];\n});\n\n_c2 = SignIn;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Copyright\");\n$RefreshReg$(_c2, \"SignIn\");","map":{"version":3,"sources":["/home/user/Desktop/DCI HTML-CSS EXERCISES/food_delivery2/frontend/src/components/SignIn.jsx"],"names":["React","Avatar","Button","CssBaseline","TextField","FormControlLabel","Checkbox","Link","Grid","Box","LockOutlinedIcon","Typography","Container","createTheme","ThemeProvider","useNavigate","themeSignIn","palette","primary","main","secondary","Copyright","props","Date","getFullYear","SignIn","isLoggedIn","curre","navigate","email","setEmail","useState","password","setPassword","updateData","event","target","name","value","attemptLogin","preventDefault","loginData","settings","method","body","JSON","stringify","headers","response","fetch","process","env","REACT_APP_SERVER_URL","parsedRes","json","ok","Error","message","err","alert","showLogin","setShowLogin","setIsLoggedIn","setCurrentUserId","setToken","marginTop","display","flexDirection","alignItems","m","bgcolor","mt","mb","cursor"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport Avatar from \"@mui/material/Avatar\";\nimport Button from \"@mui/material/Button\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Link from \"@mui/material/Link\";\nimport Grid from \"@mui/material/Grid\";\nimport Box from \"@mui/material/Box\";\nimport LockOutlinedIcon from \"@mui/icons-material/LockOutlined\";\nimport Typography from \"@mui/material/Typography\";\nimport Container from \"@mui/material/Container\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst themeSignIn = createTheme({\n  palette: {\n    primary: {\n      main: \"#4d8993\",\n    },\n    secondary: {\n      main: \"#d9cebf\",\n    },\n  },\n});\n\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\n//const theme = createTheme();\n\nexport default function SignIn({isLoggedIn, curre}) {\n  let navigate = useNavigate();\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const updateData = (event) => {\n    switch (event.target.name) {\n      case \"username\":\n        setEmail(event.target.value);\n        break;\n      case \"password\":\n        setPassword(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const attemptLogin = async (event) => {\n    event.preventDefault();\n    const loginData = {\n      email: email,\n      password: password\n    }\n\n    const settings = {\n      method: \"POST\",\n      body: JSON.stringify(loginData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }\n\n    const response = await fetch(process.env.REACT_APP_SERVER_URL + \"/login\", settings);\n    const parsedRes = await response.json();\n\n    try {\n      // If the request was successful\n      if (response.ok) {\n        //props.setCurrentUserId(parsedRes.id);\n        //props.setIsLoggedIn(true);\n      // If the request was unsuccessful\n      } else {\n        throw new Error(parsedRes.message);\n      }\n    } catch (err) {\n      alert(err.message)\n      setEmail(\"\");\n      setPassword(\"\");\n    }\n  }\n  if (!isLoggedIn) {\n    // Display the login view\n    if (showLogin) {\n      return (\n        <Login\n          setShowLogin={setShowLogin}\n          setIsLoggedIn={setIsLoggedIn}\n          setCurrentUserId={setCurrentUserId}\n        />\n      );\n      // Display the register view\n    } else {\n      return (\n        <Register\n          setShowLogin={setShowLogin}\n          setIsLoggedIn={setIsLoggedIn}\n          setCurrentUserId={setCurrentUserId}\n          setToken={setToken}\n        />\n      );\n    }\n  }\n\n  return (\n    <ThemeProvider theme={themeSignIn}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: \"secondary.main\" }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={attemptLogin}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={updateData}\n              value={email}\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={updateData}\n              value={password}\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Link href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Link>\n              </Grid>\n              <Grid item>\n                <Link\n                  onClick={() => navigate(`/sign-up`)}\n                  variant=\"body2\"\n                  style={{ cursor: \"pointer\" }}\n                >\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n        <Copyright sx={{ mt: 8, mb: 4 }} />\n      </Container>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}